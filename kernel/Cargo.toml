[package]
name = "delta_kernel"
description = "Core crate providing a Delta/Deltalake implementation focused on interoperability with a wide range of query engines."
documentation = "https://docs.rs/delta_kernel"
edition.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true
readme.workspace = true
version.workspace = true
# exclude golden tests + golden test data since they push us over 10MB crate size limit
exclude = ["tests/golden_tables.rs", "tests/golden_data/"]
rust-version.workspace = true

[package.metadata.docs.rs]
all-features = true

[package.metadata.release]
pre-release-replacements = [
  { file = "../README.md", search = "delta_kernel = \"[a-z0-9\\.-]+\"", replace = "delta_kernel = \"{{version}}\"" },
  { file = "../README.md", search = "version = \"[a-z0-9\\.-]+\"", replace = "version = \"{{version}}\"" },
]
pre-release-hook = [
  "git",
  "cliff",
  "--repository",
  "../",
  "--config",
  "../cliff.toml",
  "--unreleased",
  "--prepend",
  "../CHANGELOG.md",
  "--include-path",
  "*",
  "--tag",
  "{{version}}",
]

[dependencies]
bytes = "1.7"
chrono = "0.4.40"
fix-hidden-lifetime-bug = "0.2"
indexmap = "2.5.0"
itertools = "0.13"
roaring = "0.10.6"
serde = { version = "1", features = ["derive", "rc"] }
serde_json = "1"
thiserror = "1"
# only for structured logging
tracing = { version = "0.1", features = ["log"] }
url = "2"
uuid = { version = "1.10.0", features = ["v4", "fast-rng"] }
z85 = "3.0.5"

# bring in our derive macros
delta_kernel_derive = { path = "../derive-macros", version = "0.9.0" }

# used for developer-visibility
visibility = "0.1.1"

# Used in the sync engine
tempfile = { version = "3", optional = true }

# Arrow 54 crates
arrow_54 = { package = "arrow", version = "=54.3.1", features = ["chrono-tz", "ffi", "json", "prettyprint"], optional = true }
parquet_54 = { package = "parquet", version = "=54.3.1", features = ["async", "object_store"], optional = true }
object_store_54 = { package = "object_store", version = "0.11", optional = true }
hdfs-native-object-store_54 = { package = "hdfs-native-object-store", version = "0.13", optional = true }

# Arrow 55 crates
arrow_55 = { package = "arrow", version = "55", features = ["chrono-tz", "ffi", "json", "prettyprint"], optional = true }
parquet_55 = { package = "parquet", version = "55", features = ["async", "object_store"], optional = true }
object_store_55 = { package = "object_store", version = "0.12", optional = true }
hdfs-native-object-store_55 = { package = "hdfs-native-object-store", version = "0.14", optional = true }

futures = { version = "0.3", optional = true }
# Used for fetching direct urls (like pre-signed urls)
reqwest = { version = "0.12.8", default-features = false, optional = true }
strum = { version = "0.26", features = ["derive"] }


# optionally used with default engine (though not required)
tokio = { version = "1.40", optional = true, features = ["rt-multi-thread"] }

# Used in integration tests
hdfs-native = { version = "0.11", optional = true }
walkdir = { version = "2.5.0", optional = true }

[features]
# The default version to be expected
arrow = ["arrow_55"] # REVERT

arrow_54 = [
  "dep:arrow_54",
  "dep:parquet_54",
  "dep:object_store_54",
]
arrow_55 = [
  "dep:arrow_55",
  "dep:parquet_55",
  "dep:object_store_55",
]

need_arrow = []
arrow-conversion = ["need_arrow"]
arrow-expression = ["need_arrow"]

cloud_54 = [
  "object_store_54/aws",
  "object_store_54/azure",
  "object_store_54/gcp",
  "object_store_54/http",
  "hdfs-native-object-store_54",
]
cloud_55 = [
  "object_store_55/aws",
  "object_store_55/azure",
  "object_store_55/gcp",
  "object_store_55/http",
  "hdfs-native-object-store_55",
]
default = []

# this is an 'internal' feature flag which has all the shared bits from default-engine and
# default-engine-rustls
default-engine-base = [
  "arrow-conversion",
  "arrow-expression",
  "futures",
  "need_arrow",
  "tokio",
]

# the default-engine use the reqwest crate with default features which uses native-tls. if you want
# to instead use rustls, use 'default-engine-rustls' which has no native-tls dependency
default-engine = ["default-engine-base", "reqwest/default"]

default-engine-rustls = [
  "default-engine-base",
  "reqwest/rustls-tls-native-roots",
  "reqwest/http2",
]

developer-visibility = []
sync-engine = [
  "need_arrow",
  "tempfile",
]
integration-test = [
  "hdfs-native-object-store_54/integration-test",
  "hdfs-native",
  "walkdir",
]

[dependencies.home]
version = "=0.5.9"

[build-dependencies]
rustc_version = "0.4.1"

[dev-dependencies]
delta_kernel = { path = ".", features = ["arrow", "default-engine", "sync-engine"] }
test_utils = { path = "../test-utils" }
async-trait = "0.1" # only used for our custom SlowGetStore ObjectStore implementation
paste = "1.0"
test-log = { version = "0.2", default-features = false, features = ["trace"] }
tempfile = "3"
tar = "0.4"
zstd = "0.13"
tracing-subscriber = { version = "0.3", default-features = false, features = [
  "env-filter",
  "fmt",
] }
